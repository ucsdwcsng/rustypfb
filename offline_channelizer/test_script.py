import numpy as np
import scipy.signal as sig
import matplotlib.pyplot as plt

# float_arr = list()
with open("prototype_filter.32cf") as fp:
    barr = np.fromfile(fp, dtype='complex64')
# outp_arr = np.fft.fftshift(np.fft.fft(barr / np.sum(barr)))
# plt.plot(np.real(barr))
# plt.savefig('prototype_filter.png')
# print(barr)
# barr = np.fft.fftshift(np.abs(barr.reshape((1024, 2*32764))), axes=0)
barr = barr.reshape((1024, 2*32764))
barr = np.fft.fftshift(np.abs(barr), axes=0)
print(barr)
# # barr = np.abs(arr)
# # f, t, Zxx = sig.stft(arr, window=sig.windows.kaiser(beta=10.0, M=1024), nperseg=1024, noverlap=512)
fig, ax = plt.subplots()
print(np.max(barr), np.min(barr), np.median(barr))
# # ax.plot(np.log10(barr).T)
# # # ax.plot(np.abs(np.fft.fftshift(Zxx, axes=1)))
pos = ax.imshow(np.log10(barr)[:, 0:40000], vmin=-3, vmax=1, aspect='auto', origin='lower')
# # # # plt.colorbar()
fig.colorbar(pos, ax=ax)
fig.savefig('busyBandDSSS_channelized_wrong_reshape.png')
exit(-1)
# f = np.fft.fftshift(np.arange(1024))
# print(len(t))
# print(len(arr))
# print(barr)
# freqs = np.fft.fftshift(np.fft.fftfreq(1024))
# nslice = np.array(np.arange(32764*2))
Zxx = np.abs(np.fft.fftshift(barr, axes=1))
print(np.max(Zxx), np.min(Zxx))
fig, ax = plt.subplots()
# ax.imshow(Zxx, aspect='auto', vmin=10000.0, vmax=np.max(Zxx))
ax.plot(Zxx.T)
fig.savefig('busyBandDSSS_Channelized.png')
